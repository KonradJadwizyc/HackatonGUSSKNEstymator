"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)",
TimePeriod == 2002) %>%
group_by(X.Age.)
View(przyk)
przyk <- kolumny %>% filter(GeoAreaName == c("Albania",
"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)") %>%
group_by(X.Age.)
View(przyk)
przyk <- kolumny %>% filter(GeoAreaName == c("Albania",
"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)") %>%
group_by(X.Age.) %>% count(GeoAreaName)
View(przyk)
przyk <- kolumny %>% filter(GeoAreaName == c("Albania",
"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)") %>%
group_by(X.Age.) %>% count(GeoAreaName,Value)
View(przyk)
plotly::plot_ly(przyk, y = ~Value, x = ~X.Age., color = ~GeoAreaName, alpha = 0.7, type = "scatter")
plotly::plot_ly(przyk, y = ~Value, x = ~GeoAreaName, color = ~X.Age., alpha = 0.7, type = "scatter")
View(przyk)
plotly::plot_ly(przyk, x = ~Value, y = ~GeoAreaName, color = ~X.Age., alpha = 0.7, type = "scatter")
przyk <- kolumny %>% filter(GeoAreaName == c("Albania",
"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)") %>%
group_by(X.Age.)
plotly::plot_ly(przyk, x = ~Value, y = ~GeoAreaName, color = ~X.Age., alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, color = ~X.Age., alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, color = ~X.Age, size = GeoAreaName, alpha = 0.7, type = "bar")
View(przyk)
przyk <- kolumny %>% filter(GeoAreaName == c("Albania",
"Armenia",
"Bhutan",
"Brazil"),
SeriesDescription == "Employed population below international poverty line, by sex and age (%)") %>%
group_by(X.Age.) %>% distinct()
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z= ~GeoAreaname, color = ~X.Age, size = GeoAreaName, alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z= ~GeoAreaName, color = ~X.Age, size = GeoAreaName, alpha = 0.7, type = "bar")
GeoAreaName
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z= ~GeoAreaName, color = ~X.Age, size = ~GeoAreaName, alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z= ~GeoAreaName, color = ~X.Age., size = ~GeoAreaName, alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, color = ~X.Age., size = ~GeoAreaName, alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., alpha = 0.7, type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., type = "bar")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., type = "scatter", mode = "line+markers")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., type = "scatter", mode = "markers")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., type = "histogram")
plotly::plot_ly(przyk, y = ~Value, x = ~TimePeriod, z = ~GeoAreaName, color = ~X.Age., type = "bar")
plotly::plot_ly(przyk, y = ~Value,
x = ~TimePeriod,
color = ~GeoAreaName,
type = "bar")
runApp()
# braki danych Na stanowią 5.19% całego zbioru
summary(My_SDG)
# braki danych Na stanowią 5.19% całego zbioru
summary(is.naMy_SDG)
# braki danych Na stanowią 5.19% całego zbioru
summary(is.na(My_SDG))
runApp()
runApp()
# progres object
progress <- Progress$new()
# progres object
progress <- Progress$new()
# progres object
progress <-shiny::Progress$new()
on.exit(progress$close())
runApp()
runApp()
runApp()
runApp()
runApp()
seria <- My_SDG %>%
dplyr::filter(Goal == as.numeric(input$goal), GeoAreaName %in% input$countries, SeriesDescription == input$description)
runApp()
runApp()
View(My_SDG)
View(My_SDG)
runApp()
runApp()
runApp()
View(My_SDG)
View(kolumny)
kolumny %>% count(SeriesDescription)
runApp()
runApp()
View(na_sdg)
runApp()
runApp()
runApp()
rm(x,z)
runApp()
runApp()
runApp()
runApp()
View(kolumny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(My_SDG)
runApp()
Grupy <- My_SDG %>% group_by(X.Age.,X.Sex.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 1) %>%
group_by(X.Age.,X.Sex.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 1) %>%
group_by(X.Age.)
Grupy <- My_SDG %>%
filter(Goal == 1) %>%
select(c(Goal, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.))
Grupy <- My_SDG %>%
filter(Goal == 1) %>%
select(c(Goal, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3) %>%
select(c(Goal, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3) %>%
select(c(Goal, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Sex.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3) %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Sex.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Sex.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(c(X.Sex.,X.Age.))
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.)
View(Grupy)
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.) %>% desc()
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.) %>% desc(X.Sex.)
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.) %>% desc()
Grupy <- My_SDG %>%
filter(Goal == 3, Target == "3.2") %>%
select(c(Goal, Target, SeriesDescription, GeoAreaName, TimePeriod, Value, X.Age.,X.Sex.)) %>%
group_by(X.Age.) %>% arrange(X.Sex.)
View(Grupy)
runApp()
runApp()
runApp()
git reset --hard HEAD^
git reset -- hard HEAD
runApp()
runApp()
runApp()
View(kolumny)
View(My_SDG)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
suumary(My_SDG)
summary(My_SDG)
gotowe <- My_SDG %>%
select(Goal, Target, SeriesDescription, GeoAreaName,
TimePeriod,
Value,
X.Age.,
X.Cities.,
X.Education.level.,
X.Hazard.type.,
X.location.,
X.Mode.of.transport.,
X.Sex.,
X.Type.of.mobile.technology.,
X.Type.of.speed.)
gotowe <- My_SDG %>%
select(Goal, Target, SeriesDescription, GeoAreaName,
TimePeriod,
Value,
X.Age.,
X.Cities.,
X.Education.level.,
X.Hazard.type.,
X.Location.,
X.Mode.of.transport.,
X.Sex.,
X.Type.of.mobile.technology.,
X.Type.of.speed.)
summary(My_SDG)
gotowe <- My_SDG %>%
select(Goal, Target, SeriesDescription, GeoAreaName,
TimePeriod,
Value,
X.Age.,
X.Cities.,
X.Education.level.,
X.Hazard.type.,
X.Location.,
X.Mode.of.transportation.,
X.Sex.,
X.Type.of.mobile.technology.,
X.Type.of.speed.)
View(gotowe)
gotowe <- My_SDG %>%
select(Goal, Target, SeriesDescription, GeoAreaName,
TimePeriod,
Value,
X.Age.,
X.Cities.,
X.Education.level.,
X.Hazard.type.,
X.Location.,
X.Mode.of.transportation.,
X.Sex.,
X.Type.of.mobile.technology.,
X.Type.of.speed.) %>%
mutate(group = c(X.Age.,
X.Cities.,
X.Education.level.,
X.Hazard.type.,
X.Location.,
X.Mode.of.transportation.,
X.Sex.,
X.Type.of.mobile.technology.,
X.Type.of.speed.))
View(gotowe)
sdg <- read.csv("funstion/SDG.csv")
sdg <- read.csv("funstions/SDG.csv")
SDG <- read.csv("functions/SDG.csv")
write(SDG)
write_rds(SDG)
write_rds(SDG)
saveRDS(SDG)
saveRDS(SDG, file = "My_SDG")
selectInput$selectImg == NULL
observeEvent(input$img_1, {
updateTabsetPanel(session, "navbar",
selected = "Education")
#updateSelectInput(session, "data_panel", selected = "No poverty")
selectInput$selectImg <- selected = 1
})
runApp()
runApp()
My_SDG <- My_SDG
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(My_SDG)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
My_SDG <- read.csv("SDG.csv")
saveRDS(My_SDG, file = "My_SDG")
runApp()
My_SDG$Value <- as.numeric((My_SDG$Value))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
summary(My_SDG)
My_SDG <- My_SDG %>% na.omit(My_SDG)
My_SDG <- My_SDG %>% na.omit()
My_SDG <- My_SDG
readRDS(My_SDG)
library(stats)
runApp()
My_SDG <- readRDS("My_SDG")
My_SDG <- readRDS("My_SDG")
My_SDG <- My_SDG %>% na.omit()
My_SDG <- My_SDG %>% distinct()
My_SDG <- readRDS("My_SDG")
My_SDG <- My_SDG %>% distinct()
My_SDG <- My_SDG %>% distinct(GeoAreaName)
View(My_SDG)
runApp()
runApp()
runApp()
seria <- My_SDG %>%
dplyr::filter(Goal == as.numeric(input$goal),
GeoAreaName %in% input$countries,
SeriesDescription == input$description,
X.Age. == input$group,
X.Sex. == input$group2) %>%
distinct(Value) %>%
group_by(X.Age.)
My_SDG <- readRDS("My_SDG")
runApp()
runApp()
summary(My_SDG)
My_SDG <- My_SDG %>% (My_SDG$Value = na.rm = TRUE)
My_SDG <- My_SDG %>% (My_SDG$Value = na.rm = TRUE)
My_SDG <- My_SDG %>% (My_SDG$Value, na.rm = TRUE)
My_SDG <- My_SDG %>% filter(Value !="NA")
My_SDG <- My_SDG %>% distinct(GeoAreaName)
My_SDG <- My_SDG %>% filter(Value !="NA")
My_SDG <- readRDS("My_SDG")
My_SDG$Value <- as.numeric((My_SDG$Value))
My_SDG <- My_SDG %>% filter(Value !="NA")
runApp()
runApp()
runApp()
runApp()
My_SDG <- My_SDG %>% stats::na.omit(Value)
My_SDG <- readRDS("My_SDG")
summary(My_SDG)
install.packages("processx")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("grDevices")
library(grDevices)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p <- readRDS("plottest")
p <- read_file(file, locale = "plottest")
p <- read_file(file = "plottest", locale = "plottest")
p <- read_file(file = "plottest")
rm(p)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
output$save <- downloadHandler(
webshot::export(p = last_plot(), file = "imgtest.png")
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
My_SDG$Value <- as.numeric((My_SDG$Value))/100
View(My_SDG)
My_SDG$Value <- as.numeric((My_SDG$Value*0.01))
My_SDG <- My_SDG
View(My_SDG)
runApp()
View(My_SDG)
View(My_SDG)
My_SDG$Value <- as.numeric((My_SDG$Value*0.01))
View(My_SDG)
My_SDG <- readRDS("My_SDG")
My_SDG$Value <- as.numeric((My_SDG$Value*0.01))
View(My_SDG)
My_SDG <- readRDS("My_SDG")
My_SDG$Value <- as.numeric((My_SDG$Value))
View(My_SDG)
My_SDG$Value <- My_SDG$Value*0.01
View(My_SDG)
My_SDG$Value <- My_SDG$Value*0.001
View(My_SDG)
My_SDG$Value <- My_SDG$Value*0.01
View(My_SDG)
My_SDG <- readRDS("My_SDG")
My_SDG$Value <- as.numeric((My_SDG$Value))
My_SDG$Value <- My_SDG$Value*0.001
runApp()
summary(My_SDG)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(My_SDG)
runApp()
runApp()
clr <- My_SDG %>% distinct(VAlue)
clr <- My_SDG %>% distinct(Value)
View(clr)
clr <- My_SDG %>% distinct()
clr <- My_SDG %>% !is.na(Value)
clr <- !is.na(My_SDG$Value)
clr <- My_SDG %>% filter(Value != "", !is.na(Value))
clr <- My_SDG %>% filter(Value != "", !is.na(Value),
GeoAreaName != "", !is.na(GeoAreaName))
View(clr)
View(clr)
rm(przyk)
rm(kolumny,gotowe)
rm(na_sdg)
rm(SDG)
My_SDG <- My_SDG %>% filter(Value != "", !is.na(Value),
GeoAreaName != "", !is.na(GeoAreaName))
summary(My_SDG)
# seria <- My_SDG
# if(seria$units == "PERCENT") {
#   seria <- My_SDG$Value*0.001
# }
seria <- My_SDG %>%
dplyr::filter(Goal == as.numeric(input$goal),
GeoAreaName %in% input$countries,
SeriesDescription == input$description) %>%
mutate(Value = Value*0.001) %>% distinct(My_SDG$Value)
runApp()
runApp()
as.array()
