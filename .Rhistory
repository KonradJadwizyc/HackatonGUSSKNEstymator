runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
View(pyt)
View(pyt)
runApp()
library(scales)
good_ans_perc <- percent(good_ans_sc_vec/length(unique(pyt$nr)))
runApp()
runApp()
?cat
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?disable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?runjs
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?disable
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?uiOutput
runApp()
runApp()
input_list
runApp()
input_list
runApp()
shiny::runApp()
runApp()
?plotlyOutput
runApp()
runApp()
input_list
runApp()
input_list
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(plot_input)
plot("input_list")
rm(input_list)
runApp()
rm(pyt)
pyt <- read.xlsx(xlsxFile = "Pytania.xlsx",
colNames = TRUE) %>%
mutate(praw=as.logical(praw)) %>%
mutate(plot_img=as.logical(plot_img))
library(shiny)
library(lubridate)
library(leaflet)
library(readr)
library(dplyr)
library(ggplot2)
library(shinythemes)
library(shinyWidgets)
library(plotly)
library(shinyjs)
library(openxlsx)
library(shiny.i18n)
library(scales)
pyt <- read.xlsx(xlsxFile = "Pytania.xlsx",
colNames = TRUE) %>%
mutate(praw=as.logical(praw)) %>%
mutate(plot_img=as.logical(plot_img))
#Liczba pytan, ktora chcemy miec w tescie (ustawiane w zaleznosci o wielkosci bazy)
question_quantity <- 2
ques_easy <- pyt %>%
sample_n(question_quantity) %>%
select(nr)
View(ques_easy)
View(ques_easy)
rm(pyt)
runApp()
rm(ques_easy)
runApp()
View(ques_easy)
View(ques_easy)
runApp()
View(ques_easy)
View(pyt)
View(pyt)
runApp()
View(ques_hard)
View(ques_hard)
View(ques_hard)
View(ques_hard)
View(ques_med)
View(ques_med)
View(ques_easy)
View(ques_easy)
runApp()
ques_easy <<- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique %>%
select(nr)
ques_easy <- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique %>%
select(nr)
View(ques_easy)
View(ques_easy)
ques_easy <- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique %>%
select(nr)
View(ques_easy)
View(ques_easy)
Numbers_of_questions <- c(ques_easy, ques_med, ques_hard)
View(Numbers_of_questions)
View(Numbers_of_questions)
View(ques_easy)
View(ques_easy)
Numbers_of_questions <- c(ques_easy, ques_med, ques_hard) %>%
unlist()
Numbers_of_questions <- c(ques_easy, ques_med, ques_hard) %>%
unlist
ques_easy <- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
pyt_selected <<-  pyt %>%
filter(nr == Numbers_of_questions)
View(pyt_selected)
View(pyt_selected)
View(ques_hard)
View(ques_hard)
View(pyt)
View(pyt)
View(pyt_selected)
View(pyt_selected)
pyt_selected <<-  pyt %>%
filter(nr == Numbers_of_questions)
rm(pyt_selected)
runApp()
pyt_selected <- pyt %>%
group_by(nr)
View(pyt_selected)
View(pyt_selected)
pyt_selected <- pyt %>%
group_by(nr) %>%
filter(nr == Numbers_of_questions)
pyt_selected <- pyt
pyt_selected <- pyt %>%
filter(nr == Numbers_of_questions)
View(pyt_selected)
View(pyt_selected)
ques_hard <<- pyt %>%
filter(poz_trud == 3) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr) %>%
rep(8)
View(ques_hard)
View(ques_hard)
ques_easy <<- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr) %>%
rep (4)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr) %>%
rep (6)
ques_hard <<- pyt %>%
filter(poz_trud == 3) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr) %>%
rep(8)
Numbers_of_questions <<- c(ques_easy, ques_med, ques_hard) %>%
unlist()
pyt_selected <- pyt %>%
filter(nr == Numbers_of_questions)
pyt_selected <- pyt %>%
filter(nr == Numbers_of_questions)
View(pyt_selected)
View(pyt_selected)
pyt_selected <- pyt %>%
filter(nr == 1)
ques_easy <<- pyt %>%
filter(poz_trud == 1) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
ques_hard <<- pyt %>%
filter(poz_trud == 3) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
Numbers_of_questions <<- c(ques_easy, ques_med, ques_hard) %>%
unlist()
View(ques_easy)
View(ques_easy)
View(ques_hard)
View(ques_hard)
View(ques_med)
View(ques_med)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
View(ques_hard)
View(ques_hard)
View(ques_med)
View(ques_med)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
View(ques_easy)
View(ques_easy)
View(ques_hard)
View(ques_hard)
View(ques_med)
View(ques_med)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique() %>%
select(nr)
View(ques_med)
View(ques_med)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique(nr) %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
sample_n(question_quantity) %>%
unique(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique(sample_n(question_quantity)) %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique(sample_n(question_quantity))
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique (nr)
View(ques_med)
View(ques_med)
View(pyt)
View(pyt)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique (ques_med$nr
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique (ques_med$nr)
ques_med <<- pyt %>%
filter(poz_trud == 2)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique (ques_med$nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique()
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
unique(pyt$nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
!duplicated(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
!duplicated()
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
!duplicated(pyt$nr)
duplicated(pyt$nr)
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
pyt[duplicated(pyt)]
ques_med <<- pyt %>%
filter(poz_trud == 2) %>%
pyt[!duplicated(pyt)]
ques_med <- ques_med[!duplicated(ques_med)]
ques_med <- ques_med[!duplicated(ques_med),]
ques_med <- ques_med[!duplicated(ques_med),]
ques_med <- ques_med[!duplicated(ques_med$nr),]
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity)
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
ques_easy <<- pyt %>%
filter(poz_trud == 1)
ques_easy <- ques_easy[!duplicated(ques_easy$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2)
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
ques_hard <<- pyt %>%
filter(poz_trud == 3)
ques_hard <- ques_hard[!duplicated(ques_hard$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
Numbers_of_questions <<- c(ques_easy, ques_med, ques_hard) %>%
unlist()
library(purrr)
?map
pyt_selected <- pyt %>%
map(Numbers_of_questions, filter)
View(pyt_selected)
View(pyt_selected)
pyt_selected <- map(pyt ,Numbers_of_questions, filter)
pyt_selected <- map2(pyt ,Numbers_of_questions, filter)
for(i in Numbers_of_questions) {
pyt_selected <- pyt %>%
filter(nr == i)
}
View(pyt_selected)
View(pyt_selected)
pyt_selected <- data.frame
for(i in Numbers_of_questions) {
pyt_selected <- pyt %>%
filter(nr == i)
}
pyt_selected <- data.frame
for(i in Numbers_of_questions) {
pyt_selected <- pyt_selected + pyt %>%
filter(nr == i)
}
View(pyt_selected)
View(pyt_selected)
for(i in Numbers_of_questions) {
print(i)
}
pyt_selected <- data.frame()
for(i in Numbers_of_questions) {
pyt_selected <- pyt %>%
filter(nr == i)
}
pyt_selected <- pyt %>%
filter(nr %in% Numbers_of_questions)
View(pyt_selected)
View(pyt_selected)
View(pyt_selected)
View(pyt_selected)
runApp()
runApp()
shiny::runApp()
pyt <- read.xlsx(xlsxFile = "Pytania.xlsx",
colNames = TRUE) %>%
mutate(praw=as.logical(praw)) %>%
mutate(plot_img=as.logical(plot_img))
#Number of question that we wanna show to the user (depending on the base, test value is 2)
question_quantity <- 2
ques_easy <<- pyt %>%
filter(poz_trud == 1)
ques_easy <- ques_easy[!duplicated(ques_easy$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2)
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity) %>%
select(nr)
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity, replace = TRUE) %>%
select(nr)
View(ques_med)
View(ques_med)
ques_easy <- ques_easy[!duplicated(ques_easy$nr),] %>%
sample_n(question_quantity, replace = TRUE) %>%
select(nr)
View(ques_easy)
View(ques_easy)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ques_easy$nr
ques_easy <<- pyt %>%
filter(poz_trud == 1)
ques_easy <- ques_easy[!duplicated(ques_easy$nr),]
ques_easy$nr
length(ques_easy$nr)
runApp()
runApp()
runApp()
ques_easy <<- pyt %>%
filter(poz_trud == 1)
ques_easy <- ques_easy[!duplicated(ques_easy$nr),] %>%
sample_n(question_quantity, if(length(ques_easy$nr) < question_quantity) {replace = T} else {replace = F}) %>%
select(nr)
ques_med <<- pyt %>%
filter(poz_trud == 2)
ques_med <- ques_med[!duplicated(ques_med$nr),] %>%
sample_n(question_quantity, if(length(ques_med$nr) < question_quantity) {replace = T} else {replace = F}) %>%
select(nr)
ques_med <- ques_med[!duplicated(ques_med$nr),]
ques_med <-  sample_n(question_quantity, if(length(ques_med$nr) < question_quantity) {replace = T} else {replace = F}) %>%
select(nr)
sample_n(question_quantity, if(length(ques_med$nr) < question_quantity) {replace = T} else {replace = F})
View(ques_med)
?sample_n
ques_med <-  sample_n(ques_med, question_quantity, if(length(ques_med$nr) < question_quantity) {replace = T} else {replace = F}) %>%
select(nr)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
